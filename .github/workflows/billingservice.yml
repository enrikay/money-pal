name: billingService Deploy

# Controls when the action will run. 
on:
# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
# Triggers the workflow on push or pull request events but only for when there's changes in this path.
    paths:
      - "money-pal/billingService/**"
      - ".github/workflows/billingservice.yml"

# We declare multiple jos that runs sequentially.
jobs:
  build_test:
    runs-on: ubuntu-latest
    defaults:
      run: 
        working-directory: ./billingService
    
    
    steps:
# Checks-out ther repository under $GITHUB_WORKSPACE, so this job can access it
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        cache: 'npm'
        cache-dependency-path: ./billingService/package-lock.json
        
# install applicaion dependencies
    - name: Install Dependencies
      run: |
        npm install
        npm ci

# build and test the apps 
#   - name: Build
#     run: |
#         Build
#        npm test
        
                
  push_to_DOCKER_registry:
# build docker image and push to docker hub
# The runner that the job will run on
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      
      needs: [build_test]
# only if the app build and test [Job: build_test] pass successfully
      steps:
        - name: Check out the repo
          uses: actions/checkout@v3

# Login to dockerhub
        - name: Login to Docker Hub
          uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
          with:
            images: my-docker-hub-namespace/my-docker-hub-repository

        - name: Build and push Docker image
          uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
          with:
            context: ./billingService/
            file: ./billingService/Dockerfile
            push: true
            tags: enricay/billing:latest
            
        
        
  push_to_ECR_registry:  
      name: Build Image
      runs-on: ubuntu-latest

      steps:

      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2         

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1


          
      - name: Build, tag, and push image to Amazon ECR


        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: billing
          IMAGE_TAG: latest
        

        run: | 
          cd ./billingService/
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


